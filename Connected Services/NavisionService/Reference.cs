//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NavisionService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BCA_Web_Service", ConfigurationName="NavisionService.BCA_Web_Service_Port")]
    public interface BCA_Web_Service_Port
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/BCA_Web_Service:PerformService", ReplyAction="*")]
        System.Threading.Tasks.Task<NavisionService.PerformService_Result> PerformServiceAsync(NavisionService.PerformService request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PerformService", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/BCA_Web_Service", IsWrapped=true)]
    public partial class PerformService
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BCA_Web_Service", Order=0)]
        public string serviceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BCA_Web_Service", Order=1)]
        public string xMLData;
        
        public PerformService()
        {
        }
        
        public PerformService(string serviceName, string xMLData)
        {
            this.serviceName = serviceName;
            this.xMLData = xMLData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PerformService_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/BCA_Web_Service", IsWrapped=true)]
    public partial class PerformService_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BCA_Web_Service", Order=0)]
        public string return_value;
        
        public PerformService_Result()
        {
        }
        
        public PerformService_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface BCA_Web_Service_PortChannel : NavisionService.BCA_Web_Service_Port, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class BCA_Web_Service_PortClient : System.ServiceModel.ClientBase<NavisionService.BCA_Web_Service_Port>, NavisionService.BCA_Web_Service_Port
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BCA_Web_Service_PortClient() : 
                base(BCA_Web_Service_PortClient.GetDefaultBinding(), BCA_Web_Service_PortClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BCA_Web_Service_Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BCA_Web_Service_PortClient(EndpointConfiguration endpointConfiguration) : 
                base(BCA_Web_Service_PortClient.GetBindingForEndpoint(endpointConfiguration), BCA_Web_Service_PortClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BCA_Web_Service_PortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BCA_Web_Service_PortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BCA_Web_Service_PortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BCA_Web_Service_PortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BCA_Web_Service_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NavisionService.PerformService_Result> NavisionService.BCA_Web_Service_Port.PerformServiceAsync(NavisionService.PerformService request)
        {
            return base.Channel.PerformServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<NavisionService.PerformService_Result> PerformServiceAsync(string serviceName, string xMLData)
        {
            NavisionService.PerformService inValue = new NavisionService.PerformService();
            inValue.serviceName = serviceName;
            inValue.xMLData = xMLData;
            return ((NavisionService.BCA_Web_Service_Port)(this)).PerformServiceAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BCA_Web_Service_Port))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BCA_Web_Service_Port))
            {
                return new System.ServiceModel.EndpointAddress("https://devweb.bca365.de:7013/UAT90_SE_NUP1/WS/SE01/Codeunit/BCA_Web_Service");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return BCA_Web_Service_PortClient.GetBindingForEndpoint(EndpointConfiguration.BCA_Web_Service_Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return BCA_Web_Service_PortClient.GetEndpointAddress(EndpointConfiguration.BCA_Web_Service_Port);
        }
        
        public enum EndpointConfiguration
        {
            
            BCA_Web_Service_Port,
        }
    }
}
